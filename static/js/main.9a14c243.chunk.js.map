{"version":3,"sources":["components/pixabay-api.js","components/ImagesErrorView/ImagesErrorView.js","components/ImagePendingView/ImagePendingView.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["api","fetchImages","requestKey","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImagesErrorView","message","role","ImagePendingView","className","type","color","height","width","Component","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","onClick","ImageGalleryItem","state","showModal","toggleModal","setState","largeImageUrl","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","Button","scroll","scrollToBottom","Searchbar","handleRequestChange","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","toast","autoComplete","autoFocus","placeholder","onChange","Status","App","error","status","handleFormSubmit","newRequestKey","renderImages","pixabayApi","prevState","hits","catch","finally","prevProps","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a14c243.chunk.js","sourcesContent":["const API_KEY = '18957101-8b16af6433f6d6830b4844a72';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(requestKey, page) {\n  const url = `${BASE_URL}?q=${requestKey}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;","import PropTypes from 'prop-types';\n\nfunction ImagesErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nImagesErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImagesErrorView;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImagePendingView extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Oval\"\n        color=\"#303f9f\"\n        height={50}\n        width={50}\n      />\n    );\n  }\n}\n\nexport default ImagePendingView;","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageUrl } = this.props;\n    const { showModal } = this.state;\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItemImage\"\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image) => (\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageUrl={image.largeImageURL}\n          key={image.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;","import { Component } from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n  };\n\n  scroll = () => {\n    this.props.onClick();\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    return (\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\n        Load more\n      </button>\n    );\n  }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\n\nclass Searchbar extends Component {\n  state = {\n    requestKey: '',\n  }\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleRequestChange = event => {\n    this.setState({ requestKey: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.requestKey.trim() === '') {\n      toast('Введите запрос.');\n      return;\n    }\n\n    this.props.onSubmit(this.state.requestKey);\n    this.setState({ requestKey: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n           <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.requestKey}\n            onChange={this.handleRequestChange}\n            />\n        </form>\n      </header>\n    )\n  }\n}\n\nexport default Searchbar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport './app.css';\n\nimport pixabayApi from './components/pixabay-api';\nimport ImagesErrorView from './components/ImagesErrorView';\nimport ImagePendingView from './components/ImagePendingView';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Searchbar from './components/Searchbar';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    error: null,\n    status: 'idle',\n    requestKey: '',\n    page: 1,\n    images: [],\n  };\n\n  static propTypes = {\n    requestKey: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n    images: PropTypes.array.isRequired,\n  };\n\n  handleFormSubmit = newRequestKey => {\n    this.setState({ requestKey: newRequestKey, page: 1, images: [] });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.requestKey;\n    const nextName = this.state.requestKey;\n\n    if (prevName !== nextName) {\n      this.renderImages();\n    }\n  }\n\n  renderImages = () => {\n    const { requestKey, page } = this.state;\n\n    pixabayApi\n      .fetchImages(requestKey, page)\n      .then(response =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.hits],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => this.setState({ status: Status.RESOLVED }));\n  };\n\n  render() {\n    const { status, error } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit}></Searchbar>\n        <ToastContainer autoClose={3000} />\n\n        {status === Status.IDLE && (\n          <p className=\"welcomeText\">Please enter your search term</p>\n        )}\n\n        {status === Status.PENDING && <ImagePendingView />}\n\n        {status === Status.REJECTED && (\n          <ImagesErrorView message={error.message} />\n        )}\n\n        {status === Status.RESOLVED && (\n          <>\n            <ImageGallery images={this.state.images} />\n            <Button onClick={this.renderImages} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}